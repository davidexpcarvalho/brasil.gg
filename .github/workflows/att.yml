name: Atualizar Base de Dados

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  update-database:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests flask aiohttp asyncio mysql-connector-python

    - name: Check environment variables
      run: |
        if [ -z "${{ secrets.DB_USER }}" ]; then echo "DB_USER is not set"; exit 1; fi
        if [ -z "${{ secrets.DB_PASSWORD }}" ]; then echo "DB_PASSWORD is not set"; exit 1; fi
        if [ -z "${{ secrets.DB_HOST }}" ]; then echo "DB_HOST is not set"; exit 1; fi
        if [ -z "${{ secrets.DB_PORT }}" ]; then echo "DB_PORT is not set"; exit 1; fi
        if [ -z "${{ secrets.DB_NAME }}" ]; then echo "DB_NAME is not set"; exit 1; fi
        if [ -z "${{ secrets.RIOT_API_KEY }}" ]; then echo "RIOT_API_KEY is not set"; exit 1; fi

    - name: Create log directory if it does not exist
      run: |
        mkdir -p logs

    - name: Run update script
      run: |
        python analise.py
        python analise_detalhada.py
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        RIOT_API_KEY: ${{ secrets.RIOT_API_KEY }}

    - name: Commit and push JSON files
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add *.json
        git commit -m 'Update JSON files from Excel conversion'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload files via FTP
      uses: sebastianpopp/ftp-action@v1.2.0
      with:
        host: ${{ secrets.FTP_HOST }}
        user: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        localDir: '.'  # Diretório local que você quer enviar
        remoteDir: '/www/'  # Diretório remoto no servidor FTP
